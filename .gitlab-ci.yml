image: ruby:2.4.2

stages:
  - build
  # - test
  - review
  - create-server
  - delete-server
  - stage
  - production

variables:
  CERT_PATH: certs
  INSTANCE_NAME: stage-host-${CI_COMMIT_REF_SLUG}
  DOCKER_HUB_REPO: 's1spinoza/gitlab_otus'
  PATH_TO_DOCKERRFILE: docker-monolith
  DOCKER_IMAGE: "reddit:${CI_COMMIT_REF_SLUG}"
  DOCKER_IMAGE_HUB: "${DOCKER_HUB_REPO}:${CI_COMMIT_REF_SLUG}-${CI_PIPELINE_ID}"

### Bild job orig ###
# build_job:
#  stage: build
#  script:
#    - echo 'Building'

build_job:
  image: docker:latest
  services:
    - docker:dind
  stage: build
  script:
    - cd ${PATH_TO_DOCKERRFILE}
    - docker build -t ${DOCKER_IMAGE} .
    - docker image tag ${DOCKER_IMAGE} ${DOCKER_IMAGE_HUB}
    - docker login -u ${DOCKER_HUB_LOGIN} -p ${DOCKER_HUB_PASS}
    - docker push ${DOCKER_IMAGE_HUB}

### Test job from base file ###
# test_unit_job:
#  stage: test
#  services:
#    - mongo:latest
#  script:
#    - ruby simpletest.rb

# test_integration_job:
#  stage: test
#  script:
#    - echo 'Testing 2'

### Review from base file ### 
deploy_dev_job:
  stage: review
  script:
    - echo 'Deploy'
  environment:
    name: dev
    url: http://dev.example.com

branch review:
  stage: review
  script: echo "Deploy to $CI_ENVIRONMENT_SLUG"
  environment:
    name: branch/$CI_COMMIT_REF_NAME
    url: http://$CI_ENVIRONMENT_SLUG.example.com
  only:
    - branches
  except:
    - master
###

create-server:
  image: docker:latest
  services:
    - docker:dind
  stage: create-server
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    untracked: true
  script:
    - apk update && apk add ca-certificates curl jq
    - base=https://github.com/docker/machine/releases/download/v0.14.0 && curl -L $base/docker-machine-$(uname -s)-$(uname -m) >/tmp/docker-machine && install /tmp/docker-machine /usr/local/bin/docker-machine
    - docker-machine -s ${CERT_PATH} create --driver google --google-project docker-201808 --google-machine-image https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/family/ubuntu-1604-lts --google-machine-type n1-standard-1 --google-zone europe-west1-b ${INSTANCE_NAME}
    - eval $(docker-machine -s ${CERT_PATH} env --shell sh ${INSTANCE_NAME})
    - docker pull ${DOCKER_IMAGE_HUB}
    - docker run -d -p 9292:9292 ${DOCKER_IMAGE_HUB}
  environment:
    name: branch/${CI_COMMIT_REF_SLUG}
    on_stop: delete-server
  only:
    - branches
  except:
    - master

delete-server:
  image: docker:latest
  services:
    - docker:dind
  stage: delete-server
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    untracked: true
  when: manual
  script:
    - apk update && apk add ca-certificates curl jq
    - base=https://github.com/docker/machine/releases/download/v0.14.0 && curl -L $base/docker-machine-$(uname -s)-$(uname -m) >/tmp/docker-machine && install /tmp/docker-machine /usr/local/bin/docker-machine
    - docker-machine -s ${CERT_PATH} rm -y ${INSTANCE_NAME}
  environment:
    name: branch/${CI_COMMIT_REF_SLUG}
    action: stop

### Satge and production from orig file ### 
staging:
  stage: stage
  when: manual
  only:
    - /^\d+\.\d+.\d+/
  script:
    - echo 'Deploy'
  environment:
    name: stage
    url: https://beta.example.com

production:
  stage: production
  when: manual
  only:
    - /^\d+\.\d+.\d+/
  script:
    - echo 'Deploy'
  environment:
    name: production
    url: https://example.com
###
